#!/bin/bash

##### Deployment Options
##### Most of the provided defaults can safely be used,
##### however some values such as ETCD_ENDPOINTS and MASTER_HOST will need to be customized to your infrastructure.

# The address of the master node. In most cases this will be the publicly routable IP of the node. Worker nodes must be able to reach the master node(s) via this address on port 443. Additionally, external clients (such as an administrator using kubectl) will also need access, since this will run the Kubernetes API endpoint.
# If you will be running a high-availability control-plane consisting of multiple master nodes, then MASTER_HOST will ideally be a network load balancer that sits in front of them. Alternatively, a DNS name can be configured which will resolve to the master IPs. How requests are routed to the master nodes will be an important consideration when creating the TLS certificates.
MASTER_HOST=192.168.22.237

# List of etcd machines (http://ip:port), comma separated. If youâ€™re running a cluster of 5 machines, list them all here.
ETCD_ENDPOINTS=http://192.168.22.237:2379,http://192.168.22.238:2379,http://192.168.22.239:2379


# The CIDR network to use for pod IPs. Each pod launched in the cluster will be assigned an IP out of this range.
# This network must be routable between all hosts in the cluster. In a default installation,
# the flannel overlay network will provide routing to this network.
POD_NETWORK=10.2.0.0/16


# The CIDR network to use for service cluster VIPs (Virtual IPs).
# Each service will be assigned a cluster IP out of this range.
# This must not overlap with any IP ranges assigned to the POD_NETWORK, or other existing network infrastructure.
# Routing to these VIPs is handled by a local kube-proxy service to each host, and are not required to be routable between hosts.
SERVICE_IP_RANGE=10.3.0.0/24


# The VIP (Virtual IP) address of the Kubernetes API Service.
# If the SERVICE_IP_RANGE is changed above, this must be set to the first IP in that range.
K8S_SERVICE_IP=10.3.0.1


# The VIP (Virtual IP) address of the cluster DNS service.
# This IP must be in the range of the SERVICE_IP_RANGE and cannot be the first IP in the range.
# This same IP must be configured on all worker nodes to enable DNS service discovery.
DNS_SERVICE_IP=10.3.0.10

# The IP addresses and fully qualifed hostnames of all worker nodes will be needed.
# when you see them used below, consider it a loop and do that step for each worker.
# If the node does not have a routeable hostname
# set WORKER_FQDN to a unique, per-node placeholder name like kube-worker-1, kube-worker-2 and so on.
declare -A WORKERS=(
    ["192.168.22.237"]="worker1.k8s.gzts.com"
    ["192.168.22.238"]="worker2.k8s.gzts.com"
    ["192.168.22.239"]="worker3.k8s.gzts.com"
    )


ADVERTISE_IP=

# If using Calico a version that includes CNI binaries should be used. e.g. v1.2.4_coreos.cni.1
K8S_VER=

# set to cni if using Calico. Otherwise just leave it blank.
NETWORK_PLUGIN=